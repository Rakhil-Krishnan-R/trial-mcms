// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/competitions" | "/admin/competitions/[id]" | "/admin/competitions/[id]/assign" | "/admin/competitions/[id]/awards" | "/admin/competitions/[id]/live" | "/admin/competitions/[id]/manage" | "/admin/competitions/[id]/teams" | "/admin/competitions/[id]/teams/[teamId]" | "/admin/competitions/[id]/tiebreakers" | "/admin/competitions/new" | "/admin/login" | "/admin/register" | "/judge" | "/judge/scoresheet" | "/judge/thanks" | "/manager" | "/manager/timer"
type AppRouteHandlerRoutes = "/api/admin/login" | "/api/admin/register" | "/api/competitions" | "/api/competitions/[id]" | "/api/competitions/[id]/teams" | "/api/courts" | "/api/courts/[id]" | "/api/judge/login" | "/api/judge/meta" | "/api/judge/submit" | "/api/live" | "/api/manager/login" | "/api/manager/submit" | "/api/reports" | "/api/results" | "/api/results/tiebreak" | "/api/teams/[id]" | "/api/teams/[id]/tiebreaker" | "/api/teams/autogen"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/competitions": {}
  "/admin/competitions/[id]": { "id": string; }
  "/admin/competitions/[id]/assign": { "id": string; }
  "/admin/competitions/[id]/awards": { "id": string; }
  "/admin/competitions/[id]/live": { "id": string; }
  "/admin/competitions/[id]/manage": { "id": string; }
  "/admin/competitions/[id]/teams": { "id": string; }
  "/admin/competitions/[id]/teams/[teamId]": { "id": string; "teamId": string; }
  "/admin/competitions/[id]/tiebreakers": { "id": string; }
  "/admin/competitions/new": {}
  "/admin/login": {}
  "/admin/register": {}
  "/api/admin/login": {}
  "/api/admin/register": {}
  "/api/competitions": {}
  "/api/competitions/[id]": { "id": string; }
  "/api/competitions/[id]/teams": { "id": string; }
  "/api/courts": {}
  "/api/courts/[id]": { "id": string; }
  "/api/judge/login": {}
  "/api/judge/meta": {}
  "/api/judge/submit": {}
  "/api/live": {}
  "/api/manager/login": {}
  "/api/manager/submit": {}
  "/api/reports": {}
  "/api/results": {}
  "/api/results/tiebreak": {}
  "/api/teams/[id]": { "id": string; }
  "/api/teams/[id]/tiebreaker": { "id": string; }
  "/api/teams/autogen": {}
  "/judge": {}
  "/judge/scoresheet": {}
  "/judge/thanks": {}
  "/manager": {}
  "/manager/timer": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
